// <auto-generated />
using System;
using Geo.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Geo.Database.Migrations
{
    [DbContext(typeof(GeoDbContext))]
    [Migration("20210314200154_addUser")]
    partial class addUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Geo.Domain.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bda0a07a-2d45-4d93-931c-698bbb622e37"),
                            CountryId = new Guid("10796249-1f5e-4886-afee-840d49d1aa09"),
                            Name = "Sarajevo"
                        },
                        new
                        {
                            Id = new Guid("8501575d-7817-4771-abee-c32bf61ef676"),
                            CountryId = new Guid("10796249-1f5e-4886-afee-840d49d1aa09"),
                            Name = "Mostar"
                        },
                        new
                        {
                            Id = new Guid("3048319e-4a08-4ff3-a444-8a61a48b8525"),
                            CountryId = new Guid("00109d9d-5e5b-43d4-8b2c-ba529d90933e"),
                            Name = "Zagreb"
                        },
                        new
                        {
                            Id = new Guid("be1099eb-403a-4684-97fc-4932d65b0e92"),
                            CountryId = new Guid("00109d9d-5e5b-43d4-8b2c-ba529d90933e"),
                            Name = "Split"
                        });
                });

            modelBuilder.Entity("Geo.Domain.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Alpha2Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Alpha3Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("10796249-1f5e-4886-afee-840d49d1aa09"),
                            Alpha2Code = "BA",
                            Name = "Bosnia and Herzegovina"
                        },
                        new
                        {
                            Id = new Guid("00109d9d-5e5b-43d4-8b2c-ba529d90933e"),
                            Alpha2Code = "HR",
                            Name = "Country"
                        });
                });

            modelBuilder.Entity("Geo.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Geo.Domain.City", b =>
                {
                    b.HasOne("Geo.Domain.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Geo.Domain.Country", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
